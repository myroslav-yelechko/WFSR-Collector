services:
  db:
    image: postgres:15
    env_file:
      - .env.production
    ports:
    - '5432:5432'
    volumes:
    - pg_data:/var/lib/postgresql/data
    networks:
    - default

  app:
    build: .
    image: wfsr_collector-app
    restart: unless-stopped
    command: python manage.py runserver 0.0.0.0:8000 # TODO: run on production web-server
    entrypoint: ./entrypoint.sh
    ports:
      - '8000:8000'
    volumes:
      - .:/app
    env_file:
      - .env.production
    depends_on:
      - db
      - redis
    networks:
      - default

  redis:
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    env_file:
      - .env.production
    networks:
      - default

  celery:
    image: wfsr_collector-app
    command: celery -A WFSR worker -l info
    restart: unless-stopped
    volumes:
      - .:/app
    env_file:
      - .env.production
    depends_on:
      - db
      - app
      - redis

  celery-beat:
    image: wfsr_collector-app
    command: celery -A WFSR beat -l info
    restart: unless-stopped
    volumes:
      - .:/app
    env_file:
      - .env.production
    depends_on:
      - db
      - app
      - redis

volumes:
  pg_data:
  redis_data:

networks:
  default: